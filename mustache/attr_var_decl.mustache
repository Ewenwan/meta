private:
static std::unordered_map<std::string, std::pair<int, int>> attr_var_map;
static void init_attr_var_map(); // called in _static_constructor_
std::pair<void*, int> var_address_for_name(const std::string& var_name)
public:
static bool has_attr_var(const std::string& func_name);
template <typename T>
static bool has_attr_var_with_type();
template <T>
std::optional<std::reference_wrapper<const T>> get_attr_var(const std::string& var_name);
template <T>
std::optional<std::reference_wrapper<T>> get_attr_var_mut(const std::string& var_name);
private:

